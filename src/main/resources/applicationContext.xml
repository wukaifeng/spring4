<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
   		https://www.springframework.org/schema/context/spring-context.xsd">
   	<context:component-scan base-package="com.banksteel.service.impl" />
   	<context:propertyplaceholder>	
   	<!-- 在xml 中引入java配置类，只需要写一个bean即可，如下 -->
   	<!-- <bean class="com.banksteel.xxxConfig"></bean> -->
   	<!-- c: 命名空间引用 
   		c:属性名称-ref 应用其他bean
   		c:属性名 字段属性
   		c:_0-ref 参数索引，一个参数使用_-ref 0可以省略
   		c:_0 普通属性
   		c命名空间装配集合是不适用
   	-->
	<bean id="carRef" class="com.banksteel.Car" c:brand="123" c:corp="11" c:price="12" />
	<bean id="carRef2" class="com.banksteel.Car" c:_0="123_0" c:_1="11_1" c:_2="12" />

<!-- p: 属性命名空间引用

 -->
<bean id="personRef" class="com.banksteel.Person" p:name="zhangsan"  p:age="12">
	<property name="car" >
		<null></null>
	</property>
</bean>
<bean id="personRef2" class="com.banksteel.Person" p:name="zhangsan"  p:age="12" p:car-ref="carRef2" />

</beans>